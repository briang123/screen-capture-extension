---
description: 
globs: 
alwaysApply: true
---
# Commit Workflow Rule

When preparing to commit changes, follow these steps:

1. **Generate a Conventional Commit Message**
   - Summarize all changes since the last commit using the [Conventional Commits](https://www.conventionalcommits.org) format, including a clear title and a concise body.
   - Respect the linting rules with line length so we don't experience failing commit messages
   - Bullet points in the body should be brief (one or two sentences each) and respect the line length limit per lint rules.
   - Do not include excessive detail; focus on the main changes and their impact.

2. **Review and Approval**
   - Show the proposed commit message to the user for review.
   - Wait for explicit user approval before running the actual git commit command.

3. **Committing and Pushing**
   - Once approved, run the git commit using the reviewed message.
   - After committing, run a git push to the `origin` remote to update the repository.

**Additional Notes:**
- Exclude secrets, API keys, or sensitive information from commit messages and committed files.
- Ensure all code is formatted and linted according to project standards before committing.

**References:**
- [Conventional Commits](https://www.conventionalcommits.org)





